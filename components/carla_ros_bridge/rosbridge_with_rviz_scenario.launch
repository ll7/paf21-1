<!-- -->
<launch>
  <!-- carla parameter -->
  <arg name='host' default='$(env CARLA_SIM_HOST)'/> <!-- host the carla server is running on -->
  <arg name='port' default='2000'/> <!-- port of the carla server -->
  <arg name="town" default="$(env TOWN)"/> <!-- the carla town to load-->
  <arg name='timeout' default='10'/> <!-- the carla timeout for server communication -->
  <arg name='synchronous_mode' default='False'/> <!-- should the synchronous mode be used? Enable to get reproducible results independent of the system workload -->
  <arg name='synchronous_mode_wait_for_vehicle_control_command' default='False'/><!-- should the ros bridge wait for a vehicle control command before proceeding with the next tick -->
  <arg name='fixed_delta_seconds' default='0.05'/><!-- frequency of the carla ticks -->

  <!-- scenario runner parameter -->
  <arg name='scenario_runner_path' default='$(env SCENARIO_RUNNER_PATH)'/><!-- path to scenario runner -->
  <arg name='scenario_file' default='$(env CARLA_OPENSCENARIO_FILE)'/><!-- scenario file to run -->
  <arg name='rviz_config_file' default='$(env CARLA_RVIZ_CONFIG)'/><!-- RVIZ file showing scenario demo -->

  <!-- ego vehicle parameter -->
  <arg name="role_name" default="ego_vehicle"/> <!-- role name of the ego vehicle (used for identification in many nodes) -->
  <arg name="vehicle_filter" default="vehicle.tesla.model3"/> <!-- which vehicle type to use for the ego. See blueprint library for others -->
  <arg name="avoid_risk" default="True"/> <!-- should the agent avoid crashs and respect red traffic lights? -->
  <arg name="sensor_definition_file" default="$(env EGO_VEHICLE_SENSORS)"/>

  <arg name="spawn_point" default="$(env SPAWN_POINT)"/>

  <!-- spectator camera parameter -->
  <arg name='resolution_x' default='800'/>
  <arg name='resolution_y' default='600'/>
  <arg name='fov' default='50'/>

  <!-- ===================================================== -->

  <!-- The ros bridge -->
  <include file="$(find carla_ros_bridge)/launch/carla_ros_bridge.launch">
    <arg name='host' value='$(arg host)'/>
    <arg name='port' value='$(arg port)'/>
    <arg name='town' value='$(arg town)'/>
    <arg name='timeout' value='$(arg timeout)'/>
    <arg name='synchronous_mode' value='$(arg synchronous_mode)'/>
    <arg name='synchronous_mode_wait_for_vehicle_control_command' value='$(arg synchronous_mode_wait_for_vehicle_control_command)'/>
    <arg name='fixed_delta_seconds' value='$(arg fixed_delta_seconds)'/>
  </include>

  <!-- the ego vehicle, that will be controlled by the carla_ad_agent -->
  <include file="$(find carla_ego_vehicle)/launch/carla_example_ego_vehicle.launch">
    <arg name='host' value='$(arg host)'/>
    <arg name='port' value='$(arg port)'/>
    <arg name='timeout' value='$(arg timeout)'/>
    <arg name="vehicle_filter" value='$(arg vehicle_filter)'/>
    <arg name="sensor_definition_file" default="$(arg sensor_definition_file)"/>
    <arg name='role_name' value='$(arg role_name)'/>
    <arg name="spawn_point" value="$(arg spawn_point)"/>
  </include>

  <!-- Provide a route and access to the CARLA waypoint API (required by carla_ad_agent) -->
  <!-- <include file="$(find carla_waypoint_publisher)/launch/carla_waypoint_publisher.launch">
    <arg name='host' value='$(arg host)'/>
    <arg name='port' value='$(arg port)'/>
    <arg name='timeout' value='$(arg timeout)'/>
    <arg name='role_name' value='$(arg role_name)'/>
  </include> -->

  <!-- a spectator camera that is attached to the ego vehicle and be controlled from within rviz -->
  <include file="$(find carla_spectator_camera)/launch/carla_spectator_camera.launch">
    <arg name='host' value='$(arg host)'/>
    <arg name='port' value='$(arg port)'/>
    <arg name='timeout' value='$(arg timeout)'/>
    <arg name="role_name" value="$(arg role_name)"/>
    <arg name="resolution_x" value="$(arg resolution_x)"/>
    <arg name="resolution_y" value="$(arg resolution_y)"/>
    <arg name="fov" value="$(arg fov)"/>
  </include>

  <!--Convert Ackermann control commands to vehicle commands -->
  <include file="$(find carla_ackermann_control)/launch/carla_ackermann_control.launch" />

  <!-- Scenario Runner and an example scenario-->
  <!-- <node pkg="rostopic" type="rostopic" name="publish_scenarios"
    args="pub /carla/available_scenarios carla_ros_scenario_runner_types/CarlaScenarioList '{ 'scenarios':  
      [
        {
          'name': 'FollowLeadingVehicle',
          'scenario_file': '$(arg scenario_file)'
        }
      ]
    }' -l"/>

  <include file="$(find carla_ros_scenario_runner)/launch/carla_ros_scenario_runner.launch">
    <arg name='host' value='$(arg host)'/>
    <arg name='port' value='$(arg port)'/>
    <arg name="role_name" value="$(arg role_name)"/>
    <arg name="scenario_runner_path" value="$(arg scenario_runner_path)"/>
    <arg name="wait_for_ego" value="True"/>
  </include> -->

  <!-- Rviz visualization-->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(arg rviz_config_file)" required="true" output="screen"/>
</launch>
